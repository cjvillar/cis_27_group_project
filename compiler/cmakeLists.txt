# cmake_minimum_required(VERSION 3.10)
# project(HenloCompiler)

# # Set C++ standard
# set(CMAKE_CXX_STANDARD 17)

# # Locate LLVM package
# #find_package(LLVM REQUIRED CONFIG)

# # Set LLVM directory
# #set(LLVM_DIR "/usr/local/llvm/include/")
# #set(LLVM_DIR "/usr/local/llvm/lib/cmake/llvm")

# # Include LLVM headers
# #include_directories(${LLVM_INCLUDE_DIRS})

# # Include directories (where headers are located)
# include_directories(${PROJECT_SOURCE_DIR}/include)

# # Add your source files
# add_executable(HenloCompiler
#     src/Lexer.cpp
#     src/Parser.cpp
#     src/ReservedToken.cpp
#     src/codeGenerator.cpp
#     src/main.cpp
# )

# # Link against LLVM libraries
# target_link_libraries(HenloCompiler ${LLVM_LIBS})

cmake_minimum_required(VERSION 3.10)

# Project name
project(HenloCompiler)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Include directories (where headers are located)
include_directories(${PROJECT_SOURCE_DIR}/include)

find_package(LLVM REQUIRED CONFIG)

include_directories(${LLVM_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})

# Add the executable (list all source files here)
add_executable(HenloCompiler
    src/ReservedToken.cpp
    src/Parser.cpp
    src/Lexer.cpp
    src/main.cpp
)

# Optional: Add compiler warnings
target_compile_options(HenloCompiler PRIVATE -Wall -Wextra -pedantic)